---

- name: REDIS | Create redis group
  group:
    name: "{{ redis_user }}"
    state: present
  when: redis_is_installed == false

- name: REDIS | Create redis user
  user:
    name: "{{ redis_user }}"
    group: "{{ redis_user }}"
  when: redis_is_installed == false

- name: REDIS | Create log file
  file:
    state: touch
    owner: redis
    group: redis
    mode: 0644
    path: "{{ redis_confs.logfile }}"
  when: redis_is_installed == false and redis_confs.logfile is defined

- name: REDIS | Remove install folder is redis is not installed
  file:
    state: absent
    path: "{{ redis_install_path }}"
  when: redis_is_installed == false

- name: REDIS | install requiered redis isntallion packages
  apt:
    name: "{{ item }}"
    update_cache: yes
  with_items:
    - ruby
    - tcl
  become: yes
  when: redis_mode == 'cluster'

- name: REDIS | Download sources
  get_url:
    url: http://download.redis.io/releases/redis-{{ redis_version }}.tar.gz
    dest: /tmp
    validate_certs: no
  when: redis_is_installed == false or redis_install_new_version == true

- name: REDIS | Extract sources
  unarchive:
    copy: no
    src: /tmp/redis-{{ redis_version }}.tar.gz
    dest: /tmp
  when: redis_is_installed == False or redis_install_new_version == True

- name: REDIS | Move sources to install path
  command: "mv /tmp/redis-{{ redis_version }}/ {{ redis_install_path }}"
  when: redis_is_installed == False or redis_install_new_version == True

- name: REDIS | Make
  make:
    chdir: "{{ redis_install_path }}"
  when: redis_is_installed == False or redis_install_new_version == True

- name: REDIS | Make test
  make:
    chdir: "{{ redis_install_path }}"
    target: test
  when: redis_is_installed == False or redis_install_new_version == True

- name: REDIS | Make install
  make:
    chdir: "{{ redis_install_path }}"
    target: install
  become: yes
  when: redis_is_installed == False or redis_install_new_version == True

- name: REDIS | install redis gem
  gem:
    name: redis
    state: present
  become: yes
  when: redis_mode == 'cluster'

